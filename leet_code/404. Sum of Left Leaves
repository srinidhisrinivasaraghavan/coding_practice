/*404. Sum of Left Leaves
Easy

1591

156

Add to List

Share
Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.

/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var sumOfLeftLeaves = function(root) {
    if(!root) {
        return 0;
    }
    
    if(root.left === null && root.right === null) {
        return 0;
    }
    
    return sumOfLeftLeaf(root, true);
};

const sumOfLeftLeaf = (root, isLeftNode) => {
    if(!root) {
        return 0;
    } 
    
    console.log(root.val, root.left === null && root.right === null && isLeftNode)
    
    if(root.left === null && root.right === null && isLeftNode) {
        console.log("return", root.val)
        return root.val;
    }
    
    console.log("return")
    return sumOfLeftLeaf(root.left, true) + sumOfLeftLeaf(root.right, false);
}





